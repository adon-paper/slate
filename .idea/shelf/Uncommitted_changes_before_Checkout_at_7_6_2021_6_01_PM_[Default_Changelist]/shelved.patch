Index: arango/base_eloquent_repository.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package arango\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"reflect\"\r\n\r\n\t\"github.com/arangodb/go-driver\"\r\n)\r\n\r\nfunc (r *ArangoBaseRepository) Where(column string, operator string, value interface{}) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.Where(column, operator, value)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) WhereOr(column string, operator string, value interface{}) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.WhereOr(column, operator, value)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) WhereColumn(column string, operator string, value string) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.WhereColumn(column, operator, value)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) Join(from, fromKey, To, toKey string) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.Join(from, fromKey, To, toKey)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) With(from, fromKey, to, toKey, alias string) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.With(from, fromKey, to, toKey, alias)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) JoinEdge(from, fromKey, edge, alias, direction string) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.JoinEdge(from, fromKey, edge, alias, direction)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) WithEdge(from, fromKey, edge, alias, direction string) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.WithEdge(from, fromKey, edge, alias, direction)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) Offset(offset int) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.Offset(offset)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) Limit(limit int) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.Limit(limit)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) Sort(sortField, sortOrder string) *ArangoBaseRepository {\r\n\tr.ArangoQuery = *r.ArangoQuery.Sort(sortField, sortOrder)\r\n\treturn r\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) Raw() (string, map[string]interface{}) {\r\n\treturn r.ArangoQuery.Raw()\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) clearQuery() {\r\n\tr.ArangoQuery.clearQuery()\r\n\tr.collection = r.Collection\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) Get(request interface{}) error {\r\n\r\n\tr.query, r.filterArgs = r.Raw()\r\n\r\n\treturn r.executeQuery(request)\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) Count(request interface{}) error {\r\n\tvar (\r\n\t\treturnData string\r\n\t\tlimitQuery string\r\n\t\tsortQuery  string\r\n\t)\r\n\r\n\treturnData = \"COLLECT WITH COUNT INTO total RETURN total\"\r\n\r\n\tr.query = fmt.Sprintf(\"FOR %s in %s %s %s %s RETURN %s\",\r\n\t\tr.collection,\r\n\t\tr.collection,\r\n\t\tr.query,\r\n\t\tlimitQuery,\r\n\t\tsortQuery,\r\n\t\treturnData,\r\n\t)\r\n\r\n\treturn r.executeQuery(request)\r\n}\r\n\r\nfunc (r *ArangoBaseRepository) executeQuery(request interface{}) error {\r\n\tc := context.Background()\r\n\r\n\tctx := driver.WithQueryCount(c)\r\n\r\n\tfmt.Println(r.query)\r\n\r\n\tdata, err := r.ArangoDB.DB().Query(ctx, r.query, r.filterArgs)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn err\r\n\t}\r\n\r\n\tr.clearQuery()\r\n\r\n\tdefer data.Close()\r\n\r\n\tif data.Count() > 0 {\r\n\t\tv := reflect.Indirect(reflect.ValueOf(request))\r\n\r\n\t\tif v.Kind() == reflect.Slice {\r\n\t\t\tvar response []interface{}\r\n\t\t\tfor data.HasMore() {\r\n\t\t\t\tvar d interface{}\r\n\t\t\t\tdata.ReadDocument(c, &d)\r\n\t\t\t\tresponse = append(response, d)\r\n\t\t\t}\r\n\r\n\t\t\tjsonResponse, _ := json.Marshal(response)\r\n\t\t\tjson.Unmarshal(jsonResponse, &request)\r\n\t\t\treturn nil\r\n\t\t}\r\n\r\n\t\tdata.ReadDocument(c, &request)\r\n\t\treturn nil\r\n\t}\r\n\r\n\treturn nil\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- arango/base_eloquent_repository.go	(revision a7317ddfa8bbc0c6dce6799aebea24c151cee6c1)
+++ arango/base_eloquent_repository.go	(date 1625569293746)
@@ -39,10 +39,6 @@
 	return r
 }
 
-func (r *ArangoBaseRepository) WithEdge(from, fromKey, edge, alias, direction string) *ArangoBaseRepository {
-	r.ArangoQuery = *r.ArangoQuery.WithEdge(from, fromKey, edge, alias, direction)
-	return r
-}
 
 func (r *ArangoBaseRepository) Offset(offset int) *ArangoBaseRepository {
 	r.ArangoQuery = *r.ArangoQuery.Offset(offset)
